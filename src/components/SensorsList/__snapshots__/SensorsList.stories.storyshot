// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Layout/SensorsList Default 1`] = `
<div
  className="p-6 pb-8"
>
  <h1
    className="text-2xl m-0 mb-2 text-black font-headline"
  >
    Sensoren
  </h1>
  <div
    className="w-full max-w-full overflow-y-hidden overflow-x-auto pb-4"
  >
    <table
      className="w-full text-left"
    >
      <thead
        className="font-normal"
      >
        <tr
          className="border-b border-gray-200 mb-4 py-4 sm:py-0 whitespace-nowrap w-auto block align-top sm:table-cell grid gap-2 sm:gap-0 sm:table-row"
        >
          <th
            className="sm:py-3 sm:pr-3 sm:pl-0 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          >
            Device-ID
             
            <button
              aria-describedby="id-j021m1"
              onBlur={[Function]}
              onClickCapture={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPressCapture={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseDownCapture={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              tabIndex={0}
              type="button"
            >
               
              <div
                className="w-4 h-4 p-0 bg-gray-50 text-gray-500 border border-gray-500 rounded-full text-[10px] flex items-center justify-center transform -translate-y-0.5"
              >
                ?
              </div>
               
            </button>
            <div
              hidden={true}
              id="id-j021m1"
              onAnimationEnd={[Function]}
              onTransitionEnd={[Function]}
              role="tooltip"
              style={
                Object {
                  "display": "none",
                  "left": "100%",
                  "pointerEvents": "none",
                  "position": "fixed",
                  "top": "100%",
                }
              }
            >
              <div
                className="max-w-sm py-3 px-4 text-xs bg-gray-900 text-white"
              >
                <div
                  style={
                    Object {
                      "fontSize": 16,
                      "height": "1em",
                      "pointerEvents": "none",
                      "top": "100%",
                      "width": "1em",
                    }
                  }
                >
                  <svg
                    style={
                      Object {
                        "transform": "rotateZ(180deg)",
                      }
                    }
                    viewBox="0 0 30 30"
                  >
                    <path
                      className="stroke"
                      d="M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26 C26.7,29,24.6,28.1,23.7,27.1z"
                    />
                    <path
                      className="fill"
                      d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"
                    />
                  </svg>
                </div>
                Nutze hier die exakte Device-ID aus Deiner TTN-Konsole. Die ID ist für andere Stadtpuls-Nutzer:innen nicht sichtbar.
              </div>
            </div>
          </th>
          <th
            className="w-full sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          >
            Anzeigename
             
            <button
              aria-describedby="id-j2l69t"
              onBlur={[Function]}
              onClickCapture={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPressCapture={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseDownCapture={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              tabIndex={0}
              type="button"
            >
               
              <div
                className="w-4 h-4 p-0 bg-gray-50 text-gray-500 border border-gray-500 rounded-full text-[10px] flex items-center justify-center transform -translate-y-0.5"
              >
                ?
              </div>
               
            </button>
            <div
              hidden={true}
              id="id-j2l69t"
              onAnimationEnd={[Function]}
              onTransitionEnd={[Function]}
              role="tooltip"
              style={
                Object {
                  "display": "none",
                  "left": "100%",
                  "pointerEvents": "none",
                  "position": "fixed",
                  "top": "100%",
                }
              }
            >
              <div
                className="max-w-sm py-3 px-4 text-xs bg-gray-900 text-white"
              >
                <div
                  style={
                    Object {
                      "fontSize": 16,
                      "height": "1em",
                      "pointerEvents": "none",
                      "top": "100%",
                      "width": "1em",
                    }
                  }
                >
                  <svg
                    style={
                      Object {
                        "transform": "rotateZ(180deg)",
                      }
                    }
                    viewBox="0 0 30 30"
                  >
                    <path
                      className="stroke"
                      d="M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26 C26.7,29,24.6,28.1,23.7,27.1z"
                    />
                    <path
                      className="fill"
                      d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"
                    />
                  </svg>
                </div>
                Der Anzeigename kann frei gewählt werden und ist auch für andere Stadtpuls-Nutzer:innen öffentlich sichtbar. Werde kreativ!
              </div>
            </div>
          </th>
          <th
            className="sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          >
            Letztes Signal
          </th>
          <th
            className="sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          />
          <th
            className="pr-0 sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          />
        </tr>
      </thead>
      <tbody>
        <tr
          className="transition hover:bg-gray-50 cursor-pointer w-full py-4 sm:py-0 whitespace-nowrap w-auto block align-top sm:table-cell grid gap-2 sm:gap-0 sm:table-row"
          onClick={[Function]}
          style={
            Object {
              "gridTemplateAreas": "
      'id         name'
      'lastSeen   lastSeen'
      'button1    button2'
    ",
              "gridTemplateColumns": "auto 1fr",
            }
          }
        >
          <td
            className="font-bold sm:font-normal pl-0 sm:py-3 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "id",
                "minWidth": 140,
              }
            }
          >
            <div
              className="grid gap-2 items-center"
              style={
                Object {
                  "gridTemplateColumns": "20px 1fr",
                }
              }
            >
              <img
                alt="A microcontroller icon"
                className="inline-block w-5 h-5"
                src="/images/illustrations/microcontroller-1.svg"
              />
              device-1
            </div>
          </td>
          <td
            className="w-full sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "name",
              }
            }
          >
            Neo
          </td>
          <td
            className="italic text-gray-500 sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "lastSeen",
              }
            }
          >
            Vor ein paar Sekunden
          </td>
          <td
            className="sm:text-right sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "button1",
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-green text-blue underline-green hover:text-purple focus-offset"
              onClick={[Function]}
              type="button"
            >
              Bearbeiten
            </button>
          </td>
          <td
            className="sm:text-right pr-0 sm:py-3 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "button2",
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-error hover:opacity-60 text-error focus-offset"
              onClick={[Function]}
              type="button"
              variant="dangerous"
            >
              Löschen
            </button>
          </td>
        </tr>
        <tr
          className="transition hover:bg-gray-50 cursor-pointer w-full py-4 sm:py-0 whitespace-nowrap w-auto block align-top sm:table-cell grid gap-2 sm:gap-0 sm:table-row"
          onClick={[Function]}
          style={
            Object {
              "gridTemplateAreas": "
      'id         name'
      'lastSeen   lastSeen'
      'button1    button2'
    ",
              "gridTemplateColumns": "auto 1fr",
            }
          }
        >
          <td
            className="font-bold sm:font-normal pl-0 sm:py-3 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "id",
                "minWidth": 140,
              }
            }
          >
            <div
              className="grid gap-2 items-center"
              style={
                Object {
                  "gridTemplateColumns": "20px 1fr",
                }
              }
            >
              <img
                alt="A microcontroller icon"
                className="inline-block w-5 h-5"
                src="/images/illustrations/microcontroller-1.svg"
              />
              device-2
            </div>
          </td>
          <td
            className="w-full sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "name",
              }
            }
          >
            Triniti
          </td>
          <td
            className="italic text-gray-500 sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "lastSeen",
              }
            }
          >
            Vor 7 Monaten
          </td>
          <td
            className="sm:text-right sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "button1",
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-green text-blue underline-green hover:text-purple focus-offset"
              onClick={[Function]}
              type="button"
            >
              Bearbeiten
            </button>
          </td>
          <td
            className="sm:text-right pr-0 sm:py-3 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "button2",
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-error hover:opacity-60 text-error focus-offset"
              onClick={[Function]}
              type="button"
              variant="dangerous"
            >
              Löschen
            </button>
          </td>
        </tr>
        <tr
          className="transition hover:bg-gray-50 cursor-pointer w-full py-4 sm:py-0 whitespace-nowrap w-auto block align-top sm:table-cell grid gap-2 sm:gap-0 sm:table-row"
          onClick={[Function]}
          style={
            Object {
              "gridTemplateAreas": "
      'id         name'
      'lastSeen   lastSeen'
      'button1    button2'
    ",
              "gridTemplateColumns": "auto 1fr",
            }
          }
        >
          <td
            className="font-bold sm:font-normal pl-0 sm:py-3 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "id",
                "minWidth": 140,
              }
            }
          >
            <div
              className="grid gap-2 items-center"
              style={
                Object {
                  "gridTemplateColumns": "20px 1fr",
                }
              }
            >
              <img
                alt="A microcontroller icon"
                className="inline-block w-5 h-5"
                src="/images/illustrations/microcontroller-1.svg"
              />
              device-3
            </div>
          </td>
          <td
            className="w-full sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "name",
              }
            }
          >
            Morpheus
          </td>
          <td
            className="italic text-gray-500 sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "lastSeen",
              }
            }
          >
            —
          </td>
          <td
            className="sm:text-right sm:py-3 pl-8 sm:pl-2 sm:pr-6 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "button1",
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-green text-blue underline-green hover:text-purple focus-offset"
              onClick={[Function]}
              type="button"
            >
              Bearbeiten
            </button>
          </td>
          <td
            className="sm:text-right pr-0 sm:py-3 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            style={
              Object {
                "gridArea": "button2",
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-error hover:opacity-60 text-error focus-offset"
              onClick={[Function]}
              type="button"
              variant="dangerous"
            >
              Löschen
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
  <div
    className="text-right mt-8"
  >
    <button
      className="underline transition cursor-pointer text-left font-headline focus:ring-green text-blue underline-green hover:text-purple focus-offset"
      onClick={[Function]}
      type="button"
    >
      Sensor hinzufügen
    </button>
  </div>
</div>
`;

exports[`Storyshots Layout/SensorsList Empty 1`] = `
<div
  className="p-6 pb-8"
>
  <h1
    className="text-2xl m-0 mb-2 text-black font-headline"
  >
    Sensoren
  </h1>
  <div
    className="w-full max-w-full overflow-y-hidden overflow-x-auto pb-4"
  >
    <table
      className="w-full text-left"
    >
      <thead
        className="font-normal"
      >
        <tr
          className="border-b border-gray-200 mb-4 py-4 sm:py-0 whitespace-nowrap w-auto block align-top sm:table-cell grid gap-2 sm:gap-0 sm:table-row"
        >
          <th
            className="sm:py-3 sm:pr-3 sm:pl-0 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          >
            Device-ID
             
            <button
              aria-describedby="id-cd3ghh"
              onBlur={[Function]}
              onClickCapture={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPressCapture={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseDownCapture={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              tabIndex={0}
              type="button"
            >
               
              <div
                className="w-4 h-4 p-0 bg-gray-50 text-gray-500 border border-gray-500 rounded-full text-[10px] flex items-center justify-center transform -translate-y-0.5"
              >
                ?
              </div>
               
            </button>
            <div
              hidden={true}
              id="id-cd3ghh"
              onAnimationEnd={[Function]}
              onTransitionEnd={[Function]}
              role="tooltip"
              style={
                Object {
                  "display": "none",
                  "left": "100%",
                  "pointerEvents": "none",
                  "position": "fixed",
                  "top": "100%",
                }
              }
            >
              <div
                className="max-w-sm py-3 px-4 text-xs bg-gray-900 text-white"
              >
                <div
                  style={
                    Object {
                      "fontSize": 16,
                      "height": "1em",
                      "pointerEvents": "none",
                      "top": "100%",
                      "width": "1em",
                    }
                  }
                >
                  <svg
                    style={
                      Object {
                        "transform": "rotateZ(180deg)",
                      }
                    }
                    viewBox="0 0 30 30"
                  >
                    <path
                      className="stroke"
                      d="M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26 C26.7,29,24.6,28.1,23.7,27.1z"
                    />
                    <path
                      className="fill"
                      d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"
                    />
                  </svg>
                </div>
                Nutze hier die exakte Device-ID aus Deiner TTN-Konsole. Die ID ist für andere Stadtpuls-Nutzer:innen nicht sichtbar.
              </div>
            </div>
          </th>
          <th
            className="w-full sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          >
            Anzeigename
             
            <button
              aria-describedby="id-ahie6n"
              onBlur={[Function]}
              onClickCapture={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyPressCapture={[Function]}
              onKeyUp={[Function]}
              onMouseDown={[Function]}
              onMouseDownCapture={[Function]}
              onMouseEnter={[Function]}
              onMouseLeave={[Function]}
              tabIndex={0}
              type="button"
            >
               
              <div
                className="w-4 h-4 p-0 bg-gray-50 text-gray-500 border border-gray-500 rounded-full text-[10px] flex items-center justify-center transform -translate-y-0.5"
              >
                ?
              </div>
               
            </button>
            <div
              hidden={true}
              id="id-ahie6n"
              onAnimationEnd={[Function]}
              onTransitionEnd={[Function]}
              role="tooltip"
              style={
                Object {
                  "display": "none",
                  "left": "100%",
                  "pointerEvents": "none",
                  "position": "fixed",
                  "top": "100%",
                }
              }
            >
              <div
                className="max-w-sm py-3 px-4 text-xs bg-gray-900 text-white"
              >
                <div
                  style={
                    Object {
                      "fontSize": 16,
                      "height": "1em",
                      "pointerEvents": "none",
                      "top": "100%",
                      "width": "1em",
                    }
                  }
                >
                  <svg
                    style={
                      Object {
                        "transform": "rotateZ(180deg)",
                      }
                    }
                    viewBox="0 0 30 30"
                  >
                    <path
                      className="stroke"
                      d="M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26 C26.7,29,24.6,28.1,23.7,27.1z"
                    />
                    <path
                      className="fill"
                      d="M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z"
                    />
                  </svg>
                </div>
                Der Anzeigename kann frei gewählt werden und ist auch für andere Stadtpuls-Nutzer:innen öffentlich sichtbar. Werde kreativ!
              </div>
            </div>
          </th>
          <th
            className="sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          >
            Letztes Signal
          </th>
          <th
            className="sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          />
          <th
            className="pr-0 sm:py-3 sm:pr-3 sm:pl-2 whitespace-nowrap w-auto block align-top sm:table-cell text-gray-400 hidden sm:visible font-normal"
          />
        </tr>
      </thead>
      <tbody>
        <tr
          className="py-4 sm:py-0 whitespace-nowrap w-auto block align-top sm:table-cell grid gap-2 sm:gap-0 sm:table-row"
        >
          <td
            className="text-center align-middle p-0 whitespace-nowrap w-auto block align-top sm:table-cell font-normal"
            colSpan={5}
            style={
              Object {
                "height": 50,
              }
            }
          >
            <button
              className="underline transition cursor-pointer text-left font-headline focus:ring-green text-blue underline-green hover:text-purple focus-offset"
              onClick={[Function]}
              type="button"
            >
              <img
                alt="A microcontroller icon"
                className="inline-block w-5 h-5 mr-2 -mt-0.5"
                src="/images/illustrations/microcontroller-1.svg"
              />
              Ersten Sensor hinzufügen
            </button>
          </td>
        </tr>
      </tbody>
    </table>
  </div>
</div>
`;
